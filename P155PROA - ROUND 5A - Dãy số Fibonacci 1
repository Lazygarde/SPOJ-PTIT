#include <bits/stdc++.h>
#define endl "\n"
using namespace std;
long long mod = 1e9 + 7, n, F[2][2], M[2][2];
void Mul(long long f[2][2], long long m[2][2])
{
	long long x = (f[0][0] * m[0][0] % mod + f[0][1] * m[1][0] % mod) % mod;
	long long y = (f[0][0] * m[0][1] % mod + f[0][1] * m[1][1] % mod) % mod;
	long long z = (f[1][0] * m[0][0] % mod + f[1][1] * m[1][0] % mod) % mod;
	long long t = (f[1][0] * m[0][1] % mod + f[1][1] * m[1][1] % mod) % mod;
	F[0][0] = x;
	F[0][1] = y;
	F[1][0] = z;
	F[1][1] = t;
}
void Pow(long long f[2][2], long long n)
{
	if (n <= 1)
		return;
	Pow(f, n / 2);
	Mul(f, f);
	if (n & 1)
		Mul(f, M);
}
long long Solve(long long n)
{
	F[0][0] = F[0][1] = F[1][0] = 1;
	F[1][1] = 0;
	M[0][0] = M[0][1] = M[1][0] = 1;
	M[1][1] = 0;
	if (n == 0)
		return 0;
	else
	{
		Pow(F, n - 1);
		return F[0][0];
	}
}
int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	long long a, n;
	cin >> a >> n;
	long long s = ((Solve(n) + Solve(n + 1) - 1) % mod) * a;
	s = s % mod;
	cout << s;
}
/* Do Xuan Huong
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@##################@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@#############################@@@@@@@@@@@@@@@@
@@@@@@@@@@@@&####################################@@@@@@@@@@@@
@@@@@@@@@@##########################################@@@@@@@@@
@@@@@@@@##############################################@@@@@@@
@@@@@@#################################################@@@@@@
@@@@@####################################################@@@@
@@@%#####################@@@@@@@@@@@######################@@@
@@@###################@@@@@@@@@@@@@@@@@####################@@
@@##################@@@@@@         @@@@@@##################@@
@@#################@@@@@             @@@@###################@
@@@@@@@@@@@@@@@@@@@@@@@@             @@@@@@@@@@@@@@@@@@@@@@@@
@                  &@@@@             @@@@           .......@@
@@                  @@@@@@         @@@@@@           .......@@
@@                    @@@@@@@@@@@@@@@@@            .......@@@
@@@                      @@@@@@@@@@@               ......@@@@
@@@@                                              ......@@@@@
@@@@@@                                           ......@@@@@@
@@@@@@@                                         .....@@@@@@@@
@@@@@@@@@                                     .....@@@@@@@@@@
@@@@@@@@@@@@                                ....@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@                         ....@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@%                .@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
*/
