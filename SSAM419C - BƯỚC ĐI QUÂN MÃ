#include <bits/stdc++.h>
#define endl "\n"
using namespace std;
int gx[] = {1, 2, 2, -1, 1, -2, -1, -2};
int gy[] = {2, 1, -1, 2, -2, 1, -2, -1};
struct point
{
    int x;
    int y;
    int s;
};
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int t;
    cin >> t;
    while (t--)
    {
        string s1, s2;
        cin >> s1 >> s2;
        point st, ed, k;
        int check[10][10] = {};
        st.x = s1[0] - 'a' + 1;
        st.y = s1[1] - '0';
        st.s = 0;
        ed.x = s2[0] - 'a' + 1;
        ed.y = s2[1] - '0';
        queue<point> q;
        q.push(st);
        check[st.x][st.y] = 1;
        while (q.size())
        {
            st = q.front();
            q.pop();
            if (st.x == ed.x && st.y == ed.y)
            {
                cout << st.s << endl;
                break;
            }
            k = st;
            k.s++;
            for (int i = 0; i < 8; i++)
            {
                k.x += gx[i];
                k.y += gy[i];
                if (!check[k.x][k.y] && k.x >= 1 && k.x <= 8 && k.y >= 1 && k.y <= 8)
                {
                    check[k.x][k.y] = 1;
                    q.push(k);
                }
                k.x -= gx[i];
                k.y -= gy[i];
            }
        }
    }
}
/* Do Xuan Huong
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@##################@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@#############################@@@@@@@@@@@@@@@@
@@@@@@@@@@@@&####################################@@@@@@@@@@@@
@@@@@@@@@@##########################################@@@@@@@@@
@@@@@@@@##############################################@@@@@@@
@@@@@@#################################################@@@@@@
@@@@@####################################################@@@@
@@@%#####################@@@@@@@@@@@######################@@@
@@@###################@@@@@@@@@@@@@@@@@####################@@
@@##################@@@@@@         @@@@@@##################@@
@@#################@@@@@             @@@@###################@
@@@@@@@@@@@@@@@@@@@@@@@@             @@@@@@@@@@@@@@@@@@@@@@@@
@                  &@@@@             @@@@           .......@@
@@                  @@@@@@         @@@@@@           .......@@
@@                    @@@@@@@@@@@@@@@@@            .......@@@
@@@                      @@@@@@@@@@@               ......@@@@
@@@@                                              ......@@@@@
@@@@@@                                           ......@@@@@@
@@@@@@@                                         .....@@@@@@@@
@@@@@@@@@                                     .....@@@@@@@@@@
@@@@@@@@@@@@                                ....@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@                         ....@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@%                .@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
*/
