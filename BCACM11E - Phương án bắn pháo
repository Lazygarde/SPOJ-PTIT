#include <bits/stdc++.h>
#define endl "\n"
using namespace std;
int a[101][101];
int check[101];
vector<vector<int>> v(101);
void dfs(int u)
{
    check[u] = 1;
    for (auto i : v[u])
    {
        if (!check[i])
            dfs(i);
    }
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int t;
    cin >> t;
    while (t--)
    {
        int n, s = 0, k, ans = 0;
        cin >> n;
        for (int i = 1; i <= n; i++)
        {
            check[i] = 0;
            v[i].clear();
        }
        for (int i = 1; i <= n; i++)
        {
            for (int j = 1; j <= n; j++)
            {
                cin >> a[i][j];
                if (i >= j && a[i][j])
                {
                    v[i].push_back(j);
                    v[j].push_back(i);
                }
            }
        }
        for (int i = 1; i <= n; i++)
        {
            if (!check[i])
            {
                s++;
                dfs(i);
            }
        }
        for (int i = 1; i <= n; i++)
        {
            memset(check, 0, sizeof(check));
            k = 0;
            check[i] = 1;
            for (int j = 1; j <= n; j++)
            {
                if (!check[j])
                {
                    k++;
                    dfs(j);
                }
            }
            if (k > s)
            {
                s = k;
                ans = i;
            }
        }
        cout << ans << endl;
    }
}
/* Do Xuan Huong
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@##################@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@#############################@@@@@@@@@@@@@@@@
@@@@@@@@@@@@&####################################@@@@@@@@@@@@
@@@@@@@@@@##########################################@@@@@@@@@
@@@@@@@@##############################################@@@@@@@
@@@@@@#################################################@@@@@@
@@@@@####################################################@@@@
@@@%#####################@@@@@@@@@@@######################@@@
@@@###################@@@@@@@@@@@@@@@@@####################@@
@@##################@@@@@@         @@@@@@##################@@
@@#################@@@@@             @@@@###################@
@@@@@@@@@@@@@@@@@@@@@@@@             @@@@@@@@@@@@@@@@@@@@@@@@
@                  &@@@@             @@@@           .......@@
@@                  @@@@@@         @@@@@@           .......@@
@@                    @@@@@@@@@@@@@@@@@            .......@@@
@@@                      @@@@@@@@@@@               ......@@@@
@@@@                                              ......@@@@@
@@@@@@                                           ......@@@@@@
@@@@@@@                                         .....@@@@@@@@
@@@@@@@@@                                     .....@@@@@@@@@@
@@@@@@@@@@@@                                ....@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@                         ....@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@%                .@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
*/ 
