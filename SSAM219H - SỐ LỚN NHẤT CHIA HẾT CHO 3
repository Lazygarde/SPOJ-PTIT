#include <bits/stdc++.h>
#define endl "\n"
using namespace std;
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int t;
    cin >> t;
    while (t--)
    {
        int n, s = 0;
        cin >> n;
        vector<int> a;
        for (int i = 0; i < n; i++)
        {
            int x;
            cin >> x;
            a.push_back(x);
            s += a[i];
        }
        sort(a.begin(), a.end(), greater<int>());
        vector<pair<int, int>> one, two, zero;
        for (int i = 0; i < n; i++)
        {
            pair<int, int> x;
            x.first = a[i];
            x.second = i;
            if (a[i] % 3 == 0)
                zero.push_back(x);
            else if (a[i] % 3 == 1)
                one.push_back(x);
            else
                two.push_back(x);
        }
        if (s % 3 == 1)
        {
            if (one.size() > 0 && n > 1)
                a.erase(a.begin() + one[one.size() - 1].second);
            else if (two.size() > 1 && n > 2)
            {
                a.erase(a.begin() + two[two.size() - 1].second);
                a.erase(a.begin() + two[two.size() - 2].second);
            }
            else
            {
                cout << -1 << endl;
                continue;
            }
        }
        else if (s % 3 == 2)
        {
            if (two.size() > 0 && n > 1)
                a.erase(a.begin() + two[two.size() - 1].second);
            else if (one.size() > 1 && n > 2)
            {
                a.erase(a.begin() + one[one.size() - 1].second);
                a.erase(a.begin() + one[one.size() - 2].second);
            }
            else
            {
                cout << -1 << endl;
                continue;
            }
        }
        if (a[0] != 0)
            for (int i = 0; i < a.size(); i++)
                cout << a[i];
        else
            cout << 0;
        cout << endl;
    }
}
/* Do Xuan Huong
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@##################@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@#############################@@@@@@@@@@@@@@@@
@@@@@@@@@@@@&####################################@@@@@@@@@@@@
@@@@@@@@@@##########################################@@@@@@@@@
@@@@@@@@##############################################@@@@@@@
@@@@@@#################################################@@@@@@
@@@@@####################################################@@@@
@@@%#####################@@@@@@@@@@@######################@@@
@@@###################@@@@@@@@@@@@@@@@@####################@@
@@##################@@@@@@         @@@@@@##################@@
@@#################@@@@@             @@@@###################@
@@@@@@@@@@@@@@@@@@@@@@@@             @@@@@@@@@@@@@@@@@@@@@@@@
@                  &@@@@             @@@@           .......@@
@@                  @@@@@@         @@@@@@           .......@@
@@                    @@@@@@@@@@@@@@@@@            .......@@@
@@@                      @@@@@@@@@@@               ......@@@@
@@@@                                              ......@@@@@
@@@@@@                                           ......@@@@@@
@@@@@@@                                         .....@@@@@@@@
@@@@@@@@@                                     .....@@@@@@@@@@
@@@@@@@@@@@@                                ....@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@                         ....@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@%                .@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
*/
