#include <bits/stdc++.h>
#define endl "\n"
using namespace std;
int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	long long a, b, ss = 1e9;
	cin >> a >> b;
	if (a == b)
	{
		cout << 0;
		return 0;
	}
	vector<long long> aa, bb;
	for (int i = 1; i < sqrt(a); i++)
	{
		if (a % i == 0)
		{
			aa.push_back(i);
			aa.push_back(a / i);
		}
	}
	if (sqrt(a) == (float)sqrt(a))
		aa.push_back(sqrt(a));
	for (int i = 1; i < sqrt(b); i++)
	{
		if (b % i == 0)
		{
			bb.push_back(i);
			bb.push_back(b / i);
		}
	}
	if (sqrt(b) == (float)sqrt(b))
		bb.push_back(sqrt(b));
	for (int i = 0; i < aa.size(); i++)
	{
		for (int j = 0; j < bb.size(); j++)
		{
			if (aa[i] == bb[j])
			{
				long long m = a / aa[i], n = b / bb[j], s1 = 0, s2 = 0;
				while (1)
				{
					if (m % 5 == 0)
					{
						m = m / 5;
						s1++;
					}
					else if (m % 3 == 0)
					{
						m = m / 3;
						s1++;
					}
					else if (m % 2 == 0)
					{
						m = m / 2;
						s1++;
					}
					else
						break;
				}
				while (1)
				{
					if (n % 5 == 0)
					{
						n = n / 5;
						s2++;
					}
					else if (n % 3 == 0)
					{
						n = n / 3;
						s2++;
					}
					else if (n % 2 == 0)
					{
						n = n / 2;
						s2++;
					}
					else
						break;
				}
				if (m == 1 && n == 1)
					ss = min(ss, s1 + s2);
				break;
			}
		}
	}
	if (ss == 1e9)
		cout << -1;
	else
		cout << ss;
}
/* Do Xuan Huong
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@##################@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@#############################@@@@@@@@@@@@@@@@
@@@@@@@@@@@@&####################################@@@@@@@@@@@@
@@@@@@@@@@##########################################@@@@@@@@@
@@@@@@@@##############################################@@@@@@@
@@@@@@#################################################@@@@@@
@@@@@####################################################@@@@
@@@%#####################@@@@@@@@@@@######################@@@
@@@###################@@@@@@@@@@@@@@@@@####################@@
@@##################@@@@@@         @@@@@@##################@@
@@#################@@@@@             @@@@###################@
@@@@@@@@@@@@@@@@@@@@@@@@             @@@@@@@@@@@@@@@@@@@@@@@@
@                  &@@@@             @@@@           .......@@
@@                  @@@@@@         @@@@@@           .......@@
@@                    @@@@@@@@@@@@@@@@@            .......@@@
@@@                      @@@@@@@@@@@               ......@@@@
@@@@                                              ......@@@@@
@@@@@@                                           ......@@@@@@
@@@@@@@                                         .....@@@@@@@@
@@@@@@@@@                                     .....@@@@@@@@@@
@@@@@@@@@@@@                                ....@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@                         ....@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@%                .@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
*/
