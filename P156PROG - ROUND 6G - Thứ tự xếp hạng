#include <bits/stdc++.h>
#define endl "\n"
using namespace std;
struct ts
{
	long long pos1;
	long long d;
	long long pos2;
};
bool cmp1(ts a, ts b)
{
	return a.d > b.d;
}
bool cmp2(ts a, ts b)
{
	return a.pos1 < b.pos1;
}
int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int t = 1, n;
	while (cin >> n)
	{
		long long x, s = 1e9;
		ts a[n];
		ts b[n];
		for (int i = 0; i < n; i++)
		{
			cin >> x;
			a[i].d = x;
			a[i].pos1 = i;
		}
		for (int i = 0; i < n; i++)
		{
			cin >> x;
			b[i].d = x;
			b[i].pos1 = i;
		}
		sort(a, a + n, cmp1);
		sort(b, b + n, cmp1);
		for (int i = 0; i < n; i++)
		{
			a[i].pos2 = i + 1;
			b[i].pos2 = i + 1;
		}
		sort(a, a + n, cmp2);
		sort(b, b + n, cmp2);
		for (int i = 0; i < n; i++)
			if (a[i].pos2 != b[i].pos2)
				s = min(s, min(a[i].pos2, b[i].pos2));
		cout << "Case " << t << ": ";
		t++;
		if (s == 1e9)
			cout << "agree\n";
		else
			cout << s << endl;
	}
}
/* Do Xuan Huong
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@##################@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@#############################@@@@@@@@@@@@@@@@
@@@@@@@@@@@@&####################################@@@@@@@@@@@@
@@@@@@@@@@##########################################@@@@@@@@@
@@@@@@@@##############################################@@@@@@@
@@@@@@#################################################@@@@@@
@@@@@####################################################@@@@
@@@%#####################@@@@@@@@@@@######################@@@
@@@###################@@@@@@@@@@@@@@@@@####################@@
@@##################@@@@@@         @@@@@@##################@@
@@#################@@@@@             @@@@###################@
@@@@@@@@@@@@@@@@@@@@@@@@             @@@@@@@@@@@@@@@@@@@@@@@@
@                  &@@@@             @@@@           .......@@
@@                  @@@@@@         @@@@@@           .......@@
@@                    @@@@@@@@@@@@@@@@@            .......@@@
@@@                      @@@@@@@@@@@               ......@@@@
@@@@                                              ......@@@@@
@@@@@@                                           ......@@@@@@
@@@@@@@                                         .....@@@@@@@@
@@@@@@@@@                                     .....@@@@@@@@@@
@@@@@@@@@@@@                                ....@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@                         ....@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@%                .@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
*/
