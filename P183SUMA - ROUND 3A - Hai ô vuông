#include <bits/stdc++.h>
#define endl "\n"
using namespace std;
struct data
{
	int a;
	int b;
};
struct data n[5], m[5];
int kt(int i, int j)
{
	if (i >= n[0].a && i <= n[3].a && j >= n[0].b && j <= n[3].b)
		return 0;
	return 1;
}
bool cmp(struct data e,struct data f)
{
	if (e.a == f.a)
		return e.b < f.b;
	return e.a < f.a;
}
int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	for (int i = 0; i < 4; i++)
		cin >> n[i].a >> n[i].b;
	for (int i = 0; i < 4; i++)
		cin >> m[i].a >> m[i].b;
	sort(n, n + 4, cmp);
	if (m[0].a > m[1].a)
	{
		if (m[0].b > m[1].b)
		{
			for (int i = m[0].a, j = m[0].b; i >= m[1].a, j >= m[1].b; i--, j--)
			{
				if (kt(i, j) == 0)
				{
					cout << "Yes";
					return 0;
				}
			}
		}
		else
		{
			for (int i = m[0].a, j = m[0].b; i >= m[1].a, j <= m[1].b; i--, j++)
			{
				if (kt(i, j) == 0)
				{
					cout << "Yes";
					return 0;
				}
			}
		}
	}
	else
	{
		if (m[0].b > m[1].b)
		{
			for (int i = m[0].a, j = m[0].b; i <= m[1].a, j >= m[1].b; i++, j--)
			{
				if (kt(i, j) == 0)
				{
					cout << "Yes";
					return 0;
				}
			}
		}
		else
		{
			for (int i = m[0].a, j = m[0].b; i <= m[1].a, j <= m[1].b; i++, j++)
			{
				if (kt(i, j) == 0)
				{
					cout << "Yes";
					return 0;
				}
			}
		}
	}
	if (m[1].a > m[2].a)
	{
		if (m[1].b > m[2].b)
		{
			for (int i = m[1].a, j = m[1].b; i >= m[2].a, j >= m[2].b; i--, j--)
			{
				if (kt(i, j) == 0)
				{
					cout << "Yes";
					return 0;
				}
			}
		}
		else
		{
			for (int i = m[1].a, j = m[1].b; i >= m[2].a, j <= m[2].b; i--, j++)
			{
				if (kt(i, j) == 0)
				{
					cout << "Yes";
					return 0;
				}
			}
		}
	}
	else
	{
		if (m[1].b > m[2].b)
		{
			for (int i = m[1].a, j = m[1].b; i <= m[2].a, j >= m[2].b; i++, j--)
			{
				if (kt(i, j) == 0)
				{
					cout << "Yes";
					return 0;
				}
			}
		}
		else
		{
			for (int i = m[1].a, j = m[1].b; i <= m[2].a, j <= m[2].b; i++, j++)
			{
				if (kt(i, j) == 0)
				{
					cout << "Yes";
					return 0;
				}
			}
		}
	}
	if (m[2].a > m[3].a)
	{
		if (m[2].b > m[3].b)
		{
			for (int i = m[2].a, j = m[2].b; i >= m[3].a, j >= m[3].b; i--, j--)
			{
				if (kt(i, j) == 0)
				{
					cout << "Yes";
					return 0;
				}
			}
		}
		else
		{
			for (int i = m[2].a, j = m[2].b; i >= m[3].a, j <= m[3].b; i--, j++)
			{
				if (kt(i, j) == 0)
				{
					cout << "Yes";
					return 0;
				}
			}
		}
	}
	else
	{
		if (m[2].b > m[3].b)
		{
			for (int i = m[2].a, j = m[2].b; i <= m[3].a, j >= m[3].b; i++, j--)
			{
				if (kt(i, j) == 0)
				{
					cout << "Yes";
					return 0;
				}
			}
		}
		else
		{
			for (int i = m[2].a, j = m[2].b; i <= m[3].a, j <= m[3].b; i++, j++)
			{
				if (kt(i, j) == 0)
				{
					cout << "Yes";
					return 0;
				}
			}
		}
	}
	if (m[0].a > m[3].a)
	{
		if (m[0].b > m[3].b)
		{
			for (int i = m[0].a, j = m[0].b; i >= m[3].a, j >= m[3].b; i--, j--)
			{
				if (kt(i, j) == 0)
				{
					cout << "Yes";
					return 0;
				}
			}
		}
		else
		{
			for (int i = m[0].a, j = m[0].b; i >= m[3].a, j <= m[3].b; i--, j++)
			{
				if (kt(i, j) == 0)
				{
					cout << "Yes";
					return 0;
				}
			}
		}
	}
	else
	{
		if (m[0].b > m[3].b)
		{
			for (int i = m[0].a, j = m[0].b; i <= m[3].a, j >= m[3].b; i++, j--)
			{
				if (kt(i, j) == 0)
				{
					cout << "Yes";
					return 0;
				}
			}
		}
		else
		{
			for (int i = m[0].a, j = m[0].b; i <= m[3].a, j <= m[3].b; i++, j++)
			{
				if (kt(i, j) == 0)
				{
					cout << "Yes";
					return 0;
				}
			}
		}
	}
	cout << "No";
}
/* Do Xuan Huong
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@##################@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@#############################@@@@@@@@@@@@@@@@
@@@@@@@@@@@@&####################################@@@@@@@@@@@@
@@@@@@@@@@##########################################@@@@@@@@@
@@@@@@@@##############################################@@@@@@@
@@@@@@#################################################@@@@@@
@@@@@####################################################@@@@
@@@%#####################@@@@@@@@@@@######################@@@
@@@###################@@@@@@@@@@@@@@@@@####################@@
@@##################@@@@@@         @@@@@@##################@@
@@#################@@@@@             @@@@###################@
@@@@@@@@@@@@@@@@@@@@@@@@             @@@@@@@@@@@@@@@@@@@@@@@@
@                  &@@@@             @@@@           .......@@
@@                  @@@@@@         @@@@@@           .......@@
@@                    @@@@@@@@@@@@@@@@@            .......@@@
@@@                      @@@@@@@@@@@               ......@@@@
@@@@                                              ......@@@@@
@@@@@@                                           ......@@@@@@
@@@@@@@                                         .....@@@@@@@@
@@@@@@@@@                                     .....@@@@@@@@@@
@@@@@@@@@@@@                                ....@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@                         ....@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@%                .@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
*/
