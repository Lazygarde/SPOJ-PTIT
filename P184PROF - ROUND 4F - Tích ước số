#include <bits/stdc++.h>
#define endl "\n"
using namespace std;
long long poww(long long n, long long m, long long k)
{
	if (m == 1)
		return n;
	if (m % 2 == 1)
		return (n * poww(n, m - 1, k)) % k;
	long long x = poww(n, m / 2, k);
	return (x * x) % k;
}
int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int n;
	cin >> n;
	long long x, mod = 1000000007, s = 1, h = 1;
	vector<long long> a;
	map<long long, long long> b;
	for (int i = 0; i < n; i++)
	{
		cin >> x;
		b[x]++;
		if (b[x] == 1)
			a.push_back(x);
	}
	n = a.size();
	for (int i = 0; i < n; i++)
	{
		long long m = b[a[i]];
		long long k = poww(a[i], (m + 1) * m / 2, mod);
		h = (poww(h, m + 1, mod) * poww(k, s, mod)) % mod;
		s = (s * (m + 1)) % (mod - 1);
	}
	cout << h;
}
/* Do Xuan Huong
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@##################@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@#############################@@@@@@@@@@@@@@@@
@@@@@@@@@@@@&####################################@@@@@@@@@@@@
@@@@@@@@@@##########################################@@@@@@@@@
@@@@@@@@##############################################@@@@@@@
@@@@@@#################################################@@@@@@
@@@@@####################################################@@@@
@@@%#####################@@@@@@@@@@@######################@@@
@@@###################@@@@@@@@@@@@@@@@@####################@@
@@##################@@@@@@         @@@@@@##################@@
@@#################@@@@@             @@@@###################@
@@@@@@@@@@@@@@@@@@@@@@@@             @@@@@@@@@@@@@@@@@@@@@@@@
@                  &@@@@             @@@@           .......@@
@@                  @@@@@@         @@@@@@           .......@@
@@                    @@@@@@@@@@@@@@@@@            .......@@@
@@@                      @@@@@@@@@@@               ......@@@@
@@@@                                              ......@@@@@
@@@@@@                                           ......@@@@@@
@@@@@@@                                         .....@@@@@@@@
@@@@@@@@@                                     .....@@@@@@@@@@
@@@@@@@@@@@@                                ....@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@                         ....@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@%                .@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
*/
