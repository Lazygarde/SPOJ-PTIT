#include <bits/stdc++.h>
#define endl "\n"
using namespace std;
int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	char x;
	cin >> x;
	int a[4][4];
	for (int i = 0; i < 4; i++)
		for (int j = 0; j < 4; j++)
			cin >> a[i][j];
	if (x == 'R')
	{
		for (int i = 0; i < 4; i++)
		{
			for (int j = 3; j > 0; j--)
			{
				int gg = 0;
				while (a[i][j] == 0)
				{
					for (int k = j; k > 0; k--)
						a[i][k] = a[i][k - 1];
					a[i][0] = 0;
					gg++;
					if (gg == 4)
						break;
				}
			}
		}
		for (int i = 0; i < 4; i++)
		{
			for (int j = 3; j > 0;)
			{
				if (a[i][j] == a[i][j - 1])
				{
					a[i][j] *= 2;
					a[i][j - 1] = 0;
					j -= 2;
				}
				else
					j--;
			}
		}
		for (int i = 0; i < 4; i++)
		{
			for (int j = 3; j > 0; j--)
			{
				int gg = 0;
				while (a[i][j] == 0)
				{
					for (int k = j; k > 0; k--)
						a[i][k] = a[i][k - 1];
					a[i][0] = 0;
					gg++;
					if (gg == 4)
						break;
				}
			}
		}
	}
	else if (x == 'L')
	{
		for (int i = 0; i < 4; i++)
		{
			for (int j = 0; j < 3; j++)
			{
				int gg = 0;
				while (a[i][j] == 0)
				{
					for (int k = j; k < 3; k++)
						a[i][k] = a[i][k + 1];
					a[i][3] = 0;
					gg++;
					if (gg == 4)
						break;
				}
			}
		}
		for (int i = 0; i < 4; i++)
		{
			for (int j = 0; j < 3;)
			{
				if (a[i][j] == a[i][j + 1])
				{
					a[i][j] *= 2;
					a[i][j + 1] = 0;
					j += 2;
				}
				else
					j++;
			}
		}
		for (int i = 0; i < 4; i++)
		{
			for (int j = 0; j < 3; j++)
			{
				int gg = 0;
				while (a[i][j] == 0)
				{
					for (int k = j; k < 3; k++)
						a[i][k] = a[i][k + 1];
					a[i][3] = 0;
					gg++;
					if (gg == 4)
						break;
				}
			}
		}
	}
	else if (x == 'U')
	{
		for (int i = 0; i < 4; i++)
		{
			for (int j = 0; j < 3; j++)
			{
				int gg = 0;
				while (a[j][i] == 0)
				{
					for (int k = j; k < 3; k++)
						a[k][i] = a[k + 1][i];
					a[3][i] = 0;
					gg++;
					if (gg == 4)
						break;
				}
			}
		}
		for (int i = 0; i < 4; i++)
		{
			for (int j = 0; j < 3;)
			{
				if (a[j][i] == a[j + 1][i])
				{
					a[j][i] *= 2;
					a[j + 1][i] = 0;
					j += 2;
				}
				else
					j++;
			}
		}
		for (int i = 0; i < 4; i++)
		{
			for (int j = 0; j < 3; j++)
			{
				int gg = 0;
				while (a[j][i] == 0)
				{
					for (int k = j; k < 3; k++)
						a[k][i] = a[k + 1][i];
					a[3][i] = 0;
					gg++;
					if (gg == 4)
						break;
				}
			}
		}
	}
	else
	{
		for (int i = 0; i < 4; i++)
		{
			for (int j = 3; j > 0; j--)
			{
				int gg = 0;
				while (a[j][i] == 0)
				{
					for (int k = j; k > 0; k--)
						a[k][i] = a[k - 1][i];
					a[0][i] = 0;
					gg++;
					if (gg == 4)
						break;
				}
			}
		}
		for (int i = 0; i < 4; i++)
		{
			for (int j = 3; j > 0;)
			{
				if (a[j][i] == a[j - 1][i])
				{
					a[j][i] *= 2;
					a[j - 1][i] = 0;
					j -= 2;
				}
				else
					j--;
			}
		}
		for (int i = 0; i < 4; i++)
		{
			for (int j = 3; j > 0; j--)
			{
				int gg = 0;
				while (a[j][i] == 0)
				{
					for (int k = j; k > 0; k--)
						a[k][i] = a[k - 1][i];
					a[0][i] = 0;
					gg++;
					if (gg == 4)
						break;
				}
			}
		}
	}
	for (int i = 0; i < 4; i++)
	{
		for (int j = 0; j < 4; j++)
			cout << a[i][j] << " ";
		cout << endl;
	}
}
/* Do Xuan Huong
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@##################@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@#############################@@@@@@@@@@@@@@@@
@@@@@@@@@@@@&####################################@@@@@@@@@@@@
@@@@@@@@@@##########################################@@@@@@@@@
@@@@@@@@##############################################@@@@@@@
@@@@@@#################################################@@@@@@
@@@@@####################################################@@@@
@@@%#####################@@@@@@@@@@@######################@@@
@@@###################@@@@@@@@@@@@@@@@@####################@@
@@##################@@@@@@         @@@@@@##################@@
@@#################@@@@@             @@@@###################@
@@@@@@@@@@@@@@@@@@@@@@@@             @@@@@@@@@@@@@@@@@@@@@@@@
@                  &@@@@             @@@@           .......@@
@@                  @@@@@@         @@@@@@           .......@@
@@                    @@@@@@@@@@@@@@@@@            .......@@@
@@@                      @@@@@@@@@@@               ......@@@@
@@@@                                              ......@@@@@
@@@@@@                                           ......@@@@@@
@@@@@@@                                         .....@@@@@@@@
@@@@@@@@@                                     .....@@@@@@@@@@
@@@@@@@@@@@@                                ....@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@                         ....@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@%                .@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
*/
